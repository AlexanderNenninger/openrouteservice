# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Copy app.config for API test 
      run: cp ./openrouteservice-api-tests/conf/app.config.test ./openrouteservice/src/main/resources/app.config 
#    - name: All tests with jacoco/sonar
#      run: mvn -B -f openrouteservice/pom.xml org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar
    - name: All tests
      run: mvn -B -f openrouteservice/pom.xml verify

    - name: Rocket.Chat Notification
      uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@1.1.1
      env:
        ROCKETCHAT_WEBHOOK: ${{ secrets.ROCKETCHAT_WEBHOOK }}
      if: env.ROCKETCHAT_WEBHOOK != null
      with:
        type: ${{ job.status }}
        job_name: '*ORS CI Test*'
# this does not work. https://github.com/GIScience/openrouteservice/runs/1648312213?check_suite_focus=true
#        commit: false
        token: ${{ secrets.PROJECT_AUTOMATION }}
